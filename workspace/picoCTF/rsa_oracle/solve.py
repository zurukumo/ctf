# nc titan.picoctf.netした結果
# (m, c)
results = [
    (
        48,
        1243958178683320908070161277021530462031994559804812917604345413992816962699847617028301295671668162470014721804001815030262979327683265430847247544407395,
    ),
    (
        49,
        4374671741411819653095065203638363839705760144524191633605358134684143978321095859047126585649272872908765432040943055399247499744070371810470682366100689,
    ),
    (
        50,
        4707619883686427763240856106433203231481313994680729548861877810439954027216515481620077982254465432294427487895036699854948548980054737181231034760249505,
    ),
    (
        51,
        1998517197048216725617978890728205902760633363770165103499700157925986170022682604311921651991344892635565706489644418147980643978563559991322776155635395,
    ),
    (
        52,
        3993239489061277327472930109138093827255646312769901312414509207541733524779884801267968848884701166599834406248783129646083261476137481855550108336137485,
    ),
    (
        53,
        328779559998814913351140854640801391504762517581365098951033961875402256487125183765198160515443022459576165533710527230789639796593595281878338659777623,
    ),
    (
        54,
        508360559793312228361545941076593796079256051359377890404057392041173201350679527907093749381195342508061459153102529554871397740660835126208934293942761,
    ),
    (
        55,
        5002474138330219243112096565143863705755054111442789206919780309403667384723154971505517469253117259353073951256973243424364195182593342002580198985676409,
    ),
]

# c = m^e mod nなので
# c1 - m1^e, c2 - m2^e, c3 - m3^e, c4 - m4^e, ...の最大公約数がnの可能性高し
# eは65537でエスパーする
from math import gcd

e = 65537
n = gcd(*(c - pow(m, e) for m, c in results))
print("n is", n)


# encrypted "0"(m: 48) via nc titan.picoctf.net
zero = 1243958178683320908070161277021530462031994559804812917604345413992816962699847617028301295671668162470014721804001815030262979327683265430847247544407395
password = 2575135950983117315234568522857995277662113128076071837763492069763989760018604733813265929772245292223046288098298720343542517375538185662305577375746934
mul = password * zero % n

# decrypted password * zero via nc titan.picoctf.net
decrypted_mul = 0x969D272A260
decripted_password = decrypted_mul // 48


def long_to_bytes(n: int):
    return n.to_bytes((n.bit_length() + 7) // 8, "big")


plain_password = long_to_bytes(decripted_password).decode()
print("plain_password is", plain_password)


import subprocess

result = subprocess.run(
    [
        "openssl",
        "enc",
        "-d",
        "-aes-256-cbc",
        "-in",
        "secret.enc",
        "-pass",
        f"pass:{plain_password}",
    ],
    stdout=subprocess.PIPE,
    stderr=subprocess.PIPE,
)

print(result.stdout.decode())
